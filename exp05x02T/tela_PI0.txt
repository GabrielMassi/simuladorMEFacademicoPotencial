       call abrirArquivos  ()
  +++inputDS.dat         
  call preprocessadorDS ()
 call leituraGeracaoCoordenadasDS
 call leituraGeracaoConectividadesDS
 call leituraCodigosCondContornoDS(idPotencial
 call leituraValoresCondContornoDS(fPotencial,ndofP,numnp,0,nlvectP,iprtin)
 call leituraCodigosCondContornoDS(idFluxo,
 call leituraParamNumericosPropFisicaDS()
       call processamento  ()
  call montarEstrutDadosSistEqAlq(optSolverP_ =PardisoEsparso      
 em montarEstrutDadosSistEqAlq, 
  em subroutine criarPonteirosMatEsparsa_CSR(nsd, ndof, neq, num
           9
  ++ subroutine montarLmStencilNodal_CSR(...., numCoefPorLinha =            9
 criar estruturas de dados,  tempo de parede =   0.000000000000000E+000
Informacao do sistema de equacoes 


 e q u a t i o n    s y s t e m    d a t a              

      number of equations . . . . . . . . . . . . (neq    ) =       12

      number of terms in left-hand-side matrix  . (nalhs  ) =           41

      mean half bandwidth . . . . . . . . . . . . (meanbw ) =        3

      memoria necessaria para a matriz do sistema (Mbytes)  =   0.33E-03

      Solver escolhido                                      = PardisoEsparso      
  call montarEstrutDadosSistEqAlq(optSolverF_ =PardisoEsparso      
 em montarEstrutDadosSistEqAlq, 
  em subroutine criarPonteirosMatEsparsa_CSR(nsd, ndof, neq, num
          18
  ++ subroutine montarLmStencilNodal_CSR(...., numCoefPorLinha =           18
 criar estruturas de dados,  tempo de parede =   0.000000000000000E+000
Informacao do sistema de equacoes 


 e q u a t i o n    s y s t e m    d a t a              

      number of equations . . . . . . . . . . . . (neq    ) =       36

      number of terms in left-hand-side matrix  . (nalhs  ) =          242

      mean half bandwidth . . . . . . . . . . . . (meanbw ) =        6

      memoria necessaria para a matriz do sistema (Mbytes)  =   0.19E-02

      Solver escolhido                                      = PardisoEsparso      
  ..... montando sistema de equacoes da potencial
           1          41          12
  +++ apos call montarEstrutDadosSistEqAlq(
  +++ apos call dirichletConditions(
 nel =            1 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            1 , elresf = -0.500000000000000       0.500000000000000     
  0.500000000000000      -0.500000000000000     
 nel =            2 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            2 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =            3 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            3 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =            4 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            4 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =            5 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            5 , elresf = -0.500000000000000       0.500000000000000     
  0.500000000000000      -0.500000000000000     
 nel =            6 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            6 , elresf = -0.500000000000000       0.500000000000000     
  0.500000000000000      -0.500000000000000     
 nel =            7 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            7 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =            8 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            8 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =            9 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =            9 , elresf =  0.000000000000000E+000  0.000000000000000E+000
  0.000000000000000E+000  0.000000000000000E+000
 nel =           10 , eleffm =  0.666666666666667      -0.166666666666667     
 -0.333333333333333      -0.166666666666667      -0.166666666666667     
  0.666666666666667      -0.166666666666667      -0.333333333333333     
 -0.333333333333333      -0.166666666666667       0.666666666666667     
 -0.166666666666667      -0.166666666666667      -0.333333333333333     
 -0.166666666666667       0.666666666666667     
 nel =           10 , elresf = -0.500000000000000       0.500000000000000     
  0.500000000000000      -0.500000000000000     
  +++ apos call calcCoefSistAlgPotencial(
  calculo dos coeficientes, tempo =   3.906250000000000E-003
  em subroutine escreverSistemaAlgCSRemMTX(alhs, brhs, Ap, Ai, ... 
          41          12          13          41
  tempo de escrita =  3.125000000000000E-002
 solver PardisoEsparso      , potencial   
 simetria=.true.; etapa='full';
++, em solverPardisoPPD_Nodal,potencial   , com numThreads:  4
 [PARDISO]: License check was successful ... 
 Number of nonzeros in factors   =           56
 Number of factorization MFLOPS  =            0
  valores nos extremos do vetor solucao,  potencial              1
  0.60000000E+00  0.20000000E+00 -0.20000000E+00 -0.60000000E+00  0.60000000E+00  0.20000000E+00
 -0.20000000E+00 -0.60000000E+00  0.60000000E+00  0.20000000E+00 -0.20000000E+00 -0.60000000E+00
Euclid norms of computed solution:   0.15491933E+01
 tempo de parede (potencial) =      0.0156, segundos
 .............. montagem matriz   =      0.0039, segundos
 .............. solver            =      0.0117, segundos
  ..... montando sistema de equacoes da fluxo
           2         242          36
 call calcCoefSistAlgFluxo(...
  calculo dos coeficientes, tempo =   0.000000000000000E+000
 solver PardisoEsparso      , fluxo       
 simetria=.true.; etapa='full';
++, em solverPardisoPPD_Nodal,fluxo       , com numThreads:  4
 [PARDISO]: License check was successful ... 
 Number of nonzeros in factors   =          397
 Number of factorization MFLOPS  =            0
  valores nos extremos do vetor solucao,  fluxo                  1
  0.40000000E+00  0.79612534E-16  0.40000000E+00  0.71037103E-16  0.40000000E+00  0.24853504E-16
  0.40000000E+00  0.85643215E-16  0.40000000E+00  0.19528657E-16  0.40000000E+00  0.16843852E-16
Euclid norms of computed solution:   0.16970563E+01
 tempo de parede (fluxo)     =      0.0000, segundos
 .............. montagem matriz   =      0.0000, segundos
 .............. solver            =      0.0000, segundos
